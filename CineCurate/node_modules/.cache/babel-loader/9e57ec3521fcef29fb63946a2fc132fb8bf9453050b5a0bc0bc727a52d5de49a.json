{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport MovieCard from './MovieCard';\nimport './App.css';\nimport SearchIcon from './search.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://api.themoviedb.org/3/search/movie?api_key=01f9af4886c7fb97667aea5735ad3fd4';\nconst movie1 = {\n  \"Title\": \"Spider-Man\",\n  \"Year\": \"2002\",\n  \"imdbID\": 557,\n  \"Type\": \"movie\",\n  \"Poster\": \"https://image.tmdb.org/t/p/w500/gh4cZbhZxyTbgxQPxD0dOudNPTn.jpg\"\n};\nconst App = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const searchMovies = async title => {\n    const response = await fetch(`${API_URL}&query=${title}`);\n    const data = await response.json();\n    const formattedMovies = data.results.map(movie => ({\n      Title: movie.title,\n      Year: movie.release_date ? movie.release_date.split('-')[0] : 'N/A',\n      // Extract the year from release date\n      imdbID: movie.id,\n      // Assuming movie.id is used as the identifier similar to imdbID\n      Type: movie.media_type || 'movie',\n      // If there's no 'type' field, default to 'movie'\n      Poster: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'N/A' // Full URL for the poster\n    }));\n    setMovies(formattedMovies);\n  };\n  useEffect(() => {\n    searchMovies('Spiderman');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MovieLand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search for movies\",\n        value: \"SpiderMan\",\n        onChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"search\",\n        onClick: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","MovieCard","SearchIcon","jsxDEV","_jsxDEV","API_URL","movie1","App","_s","movies","setMovies","searchMovies","title","response","fetch","data","json","formattedMovies","results","map","movie","Title","Year","release_date","split","imdbID","id","Type","media_type","Poster","poster_path","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","src","alt","onClick","length","_c","$RefreshReg$"],"sources":["D:/reactapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nimport './App.css';\r\nimport SearchIcon from './search.svg';\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/search/movie?api_key=01f9af4886c7fb97667aea5735ad3fd4'\r\n\r\nconst movie1 = {\r\n    \"Title\": \"Spider-Man\",\r\n    \"Year\": \"2002\",\r\n    \"imdbID\": 557,\r\n    \"Type\": \"movie\",\r\n    \"Poster\": \"https://image.tmdb.org/t/p/w500/gh4cZbhZxyTbgxQPxD0dOudNPTn.jpg\"\r\n}\r\n\r\nconst App = () => {\r\n\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const searchMovies = async (title) => {\r\n        const response = await fetch(`${API_URL}&query=${title}`);\r\n        const data = await response.json();\r\n\r\n        const formattedMovies = data.results.map(movie => ({\r\n            Title: movie.title,\r\n            Year: movie.release_date ? movie.release_date.split('-')[0] : 'N/A', // Extract the year from release date\r\n            imdbID: movie.id, // Assuming movie.id is used as the identifier similar to imdbID\r\n            Type: movie.media_type || 'movie', // If there's no 'type' field, default to 'movie'\r\n            Poster: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'N/A' // Full URL for the poster\r\n        }));\r\n    \r\n        setMovies(formattedMovies);\r\n    }\r\n\r\n    useEffect(() => {\r\n        searchMovies('Spiderman');\r\n    }, []);\r\n    \r\n    return(\r\n        <div className=\"app\">\r\n            <h1>MovieLand</h1>\r\n            <div className=\"search\">\r\n                <input\r\n                placeholder=\"Search for movies\"\r\n                value = \"SpiderMan\"\r\n                onChange={() => {}}\r\n                />\r\n                <img\r\n                src={SearchIcon}\r\n                alt=\"search\"\r\n                onClick={() => {}}\r\n                />\r\n                </div>\r\n\r\n                {\r\n                    movies?.length > 0\r\n                    ? (\r\n                        <div className=\"container\">\r\n                            {movies.map((movie) => (\r\n                                <MovieCard />\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"empty\">\r\n                            <p>No movies found</p>\r\n                        </div>\r\n                    )\r\n                }\r\n                </div>\r\n                    );\r\n                }\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}